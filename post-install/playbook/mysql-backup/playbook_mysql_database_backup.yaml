---
- hosts: all
  gather_facts: true
    vars_files:
    - ../../global_vars/awx_config_vars.yaml

  tasks:
    - name: Create variables
      set_fact:
        remote_db_file_name: "{{ set_remote_db_backup_folder_path }}/{{ set_tower_credential_type_db_name }}_{{ ansible_date_time.date | replace('-','') }}.sql"
        local_db_file_name: "{{ set_local_db_backup_folder_path }}/{{ set_tower_credential_type_db_name }}_{{ ansible_date_time.date | replace('-','') }}.sql"

    - name: Confirm hostname
      debug:
        msg: Logged into the server.
        
    - name: Debug
      shell: |
        whoami && df -h && ls -la /runner && ls -la /mnt
      delegate_to: localhost

    - name: Removing old backups
      shell: |
        cd {{ set_remote_db_backup_folder_path }} && rm {{ set_remote_db_file_name_pattern_to_delete }}
      ignore_errors: yes

    - name: Download Database to server
      shell: |
        mysqldump -u {{ db_user_name }} -p"{{ db_user_password }}" {{ db_name }} --single-transaction --quick --lock-tables=false > "{{ remote_db_file_name }}" --no-tablespaces
      no_log: true

    - name: Wait until the database backup completed on server
      wait_for:
        path: "{{ remote_db_file_name }}"
        state: present
        msg: "Timeout to find file {{ remote_db_file_name }}"

    - name: Downloading backup to local computer
      ansible.builtin.fetch:
        src: "{{ remote_db_file_name }}"
        dest: "{{ local_db_file_name }}"
        flat: yes

    - name: Download completed
      debug:
        msg: Database have been downloaded successfully.