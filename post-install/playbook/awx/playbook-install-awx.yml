---
- name: Install AWX
  hosts: k3s_cluster
  gather_facts: false
  vars_files:
    - ../../global_vars/awx_config_vars.yaml
  collections:
    - awx.awx
  tasks:
    - name: Create variables
      set_fact:
        get_awx_namespace: awx
        set_local_path: "../awx/"
        set_dest_path: "/tmp/install-awx"
    
    - name: Copy files to remote server
      ansible.builtin.copy:
        src: "{{ set_local_path }}"
        dest: "{{ set_dest_path }}"
      become: true

    - name: Create new namespace
      shell: |
        k3s kubectl create namespace {{ get_awx_namespace }} --dry-run=client -o yaml | k3s kubectl apply -f -
      become: true

    - name: Deploy awx-operator
      shell: |
        cd {{ set_dest_path }}
        k3s kubectl apply -f install-awx-operator.yaml -n {{ get_awx_namespace }}
      become: true

    - name: Create instance of awx
      shell: |
        cd {{ set_dest_path }}
        k3s kubectl apply -f install-awx.yaml -n {{ get_awx_namespace }}
        echo "Create instance of awx"
      become: true

    - name: Wait for pvc to be created
      pause:
        minutes: 5

    - name: Update pvc permissions
      shell: |
        chown 999:root -R /var/lib/rancher/k3s/storage/$(ls -la /var/lib/rancher/k3s/storage | grep awx_postgres-awx-postgres | awk '{print $9}')
      become: true

    - name: Reset pods
      shell: |
        k3s kubectl delete pod awx-postgres-0 -n awx
        k3s kubectl delete pod "$(k3s kubectl get pods -n awx | grep /4 | awk '{print $1}')" -n awx
      become: true

    - name: Remove copied files
      ansible.builtin.file:
        path: "{{ set_local_path }}"
        state: absent
      become: true

    - name: Wait for AWX installation (0/40)
      pause:
        minutes: 10

    - name: Wait for AWX installation (10/40)
      pause:
        minutes: 10

    - name: Wait for AWX installation (20/40)
      pause:
        minutes: 10

    - name: Wait for AWX installation (30/40)
      pause:
        minutes: 10

    - name: Create awx auth variables
      shell: |
        echo "http://localhost:$(sudo k3s kubectl get service awx-service -n awx -o yaml | grep nodePort | awk '{print $2}' )"
        echo "$(sudo k3s kubectl get secret awx-admin-password -o jsonpath="{.data.password}" -n awx | base64 --decode)"
      register: awx_auth
      become: true
    
    - name: Add mount volume path to instance group
      instance_group: 
        name : default
        pod_spec_override: |
          apiVersion: v1
          kind: Pod
          metadata:
            namespace: awx
          spec:
            containers:
              - image: 'quay.io/ansible/awx-ee:0.4.0'
                name: worker
                args:
                  - ansible-runner
                  - worker
                  - '--private-data-dir=/runner'
                volumeMounts:
                  - mountPath: {{ set_volume_mount_path }}
                    name: backup
            volumes:
            - name: backup
              hostPath:
                path: {{ set_volume_mount_path }}
      environment:
        TOWER_HOST: "{{ awx_auth.stdout_lines[0] }}"
        TOWER_USERNAME: "admin"
        TOWER_PASSWORD: "{{ awx_auth.stdout_lines[1] }}"
